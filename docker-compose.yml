services:
  # Dockerhub
  #   https://hub.docker.com/_/postgres
  postgres:
    image: postgres:alpine
    environment:
      POSTGRES_PASSWORD: metabase
      POSTGRES_USER: metabase
      POSTGRES_DB: metabase
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U metabase -d metabase" ]
      interval: 10s
      timeout: 5s
      retries: 3

  # Dockerhub
  #   https://hub.docker.com/r/metabase/metabase
  metabase:
    # Option 1 - Bake clickhouse plugin into metabase image
    build:
      context: .
      dockerfile: docker/metabase.Dockerfile
    # Option 2 - Download plugin and mount
    # image: metabase/metabase
    # volumes:
    #   - ./metabase_plugins:/plugins
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: metabase
      MB_DB_PORT: 5432
      MB_DB_USER: metabase
      MB_DB_PASS: metabase
      MB_DB_HOST: postgres
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - 3000:3000
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-cache --spider -nv -t1 http://0.0.0.0:3000/api/health || exit 1" ]
      interval: 10s
      timeout: 5s
      start_period: 30s
      retries: 3

  # Dockerhub:
  #   https://hub.docker.com/r/yandex/clickhouse-server/
  # Notes:
  #   Container exposes 8123 port for HTTP interface and 9000 port for native client.
  #   The username is 'default' by default.
  clickhouse:
    image: yandex/clickhouse-server
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-cache --spider -nv -t1 http://0.0.0.0:8123/ping || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - ./clickhouse_user_files:/var/lib/clickhouse/user_files
      - clickhouse-data:/var/lib/clickhouse

  # Dockerhub:
  #   https://hub.docker.com/r/grafana/grafana
  # Docker installation guides:
  #   https://grafana.com/docs/grafana/latest/installation/docker/
  #   https://grafana.com/docs/grafana/latest/administration/configure-docker/
  # Notes
  #   - username, password are both 'admin' on setup
  #   - you can reset the admin password
  #     $ docker exec -it {container} grafana-cli admin reset-admin-password {password}
  #   - Checkout prebuild dashboards for clickhouse (and others)
  #      https://grafana.com/grafana/dashboards?direction=desc&orderBy=reviewsAvgRating&search=clickhouse
  #   - Tutorial: Creating Beautiful Grafana Dashboards on ClickHouse
  #      https://altinity.com/blog/2019/12/28/creating-beautiful-grafana-dashboards-on-clickhouse-a-tutorial
  grafana:
    image: grafana/grafana
    ports:
      - 3001:3000
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      GF_INSTALL_PLUGINS: vertamedia-clickhouse-datasource
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-cache --spider -nv -t1 http://0.0.0.0:3000/api/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 3

  # Dockerhub:
  #   https://hub.docker.com/r/prom/prometheus
  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-cache --spider -nv -t1 http://0.0.0.0:9090/-/healthy || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  # Dockerhub:
  #   https://hub.docker.com/_/telegraf
  # https://docs.influxdata.com/telegraf/v1.18/introduction/getting-started/
  # docker run --net=container:influxdb telegraf
  telegraf:
    image: telegraf
    expose:
      - 9126
    depends_on:
      clickhouse:
        condition: service_healthy
      prometheus:
        condition: service_healthy
    volumes:
      - ./telegraf.conf:/etc/telegraf/telegraf.conf

volumes:
  postgres-data:
  clickhouse-data:
  grafana-data:
